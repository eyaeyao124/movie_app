{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","Axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAgCeA,MA5Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC3C,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,gBAA1B,SACGI,GADMC,QAKb,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBCuBKC,E,4MAnCbC,MAAQ,CACNC,WAAY,EACZC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAC2BC,IAAMC,IAAI,yEADrC,gBACSJ,EADT,EACHK,KAAMA,KAAML,OACnB,EAAKM,SAAS,CAACN,SAAQD,WAAU,IAFvB,2C,kEAKVQ,KAAKN,c,+BAEE,IAAD,EACsBM,KAAKT,MAA1BC,EADD,EACCA,UAAWC,EADZ,EACYA,OAClB,OAAO,yBAASV,UAAU,YAAnB,SACJS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAAAe,GACV,OAAO,cAAC,EAAD,CACPC,GAAID,EAAMC,GAAIxB,KAAMuB,EAAMvB,KAC1BE,QAASqB,EAAMrB,QACfD,MAAOsB,EAAMtB,MACbE,OAAQoB,EAAME,mBACdrB,OAAQmB,EAAMnB,QALKmB,EAAMC,e,GAtBnBE,IAAMC,WCCxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.67ca1539.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n    return (\r\n      <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n          <h3 className=\"movie__title\">{title}</h3>\r\n          <h5 className=\"movie__year\">{year}</h5>\r\n          <ul className=\"movie__genres\">\r\n            {genres.map((genre, index) => (\r\n              <li key={index} className=\"genres__genre\">\r\n                {genre}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nMovie.propTypes = {\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string)\r\n  };\r\n\r\nexport default Movie;","import React from \"react\";\nimport Axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./Movie.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading : true,\n    movies: []\n  };\n  getMovies = async() => {\n    const {data:{data:{movies}}} = await Axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({movies, isLoading:false})\n  }\n  componentDidMount(){\n    this.getMovies();\n  }\n  render(){\n    const {isLoading, movies} = this.state;\n    return <section className=\"container\">\n      {isLoading ? \n        <div className=\"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div> \n        : \n        <div className=\"movies\">\n          {movies.map(movie =>{\n            return <Movie key={movie.id} \n            id={movie.id} year={movie.year} \n            summary={movie.summary} \n            title={movie.title} \n            poster={movie.medium_cover_image}\n            genres={movie.genres}\n            />\n          })}\n        </div>\n      }\n    </section>;\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}